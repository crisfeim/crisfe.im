- Refinar ul/ol estilos.
- Coloración de sintáxis: Hay algún estilo que hace que el color sea más oscuro, interfiere con el color de solarized-light.
- Focus on scroll
- SPAlike navigation
- Mover artefactos del artículo a `assets`.
- Eliminar `runnable` shortcode ?
- Transformar mov/mp4 a webm. Optimizar videos.
- Minificar hugo en vercel
- Sitio multilengua: Activar español
- Añadir frase descriptiva en la home
- Importar alpine de una manera más eficiente en los artículos que lo usen.
	- Actualmente el index.html generado lo importa directamente, estaría bien que fuese el artículo el que tuviese una propiedad del tipo: "dependencies": ["alpine3x.js"] y el `single.html` los importase en el header.
- Simplificar el script de build de componentes: eliminar la necesidad de un "pages", un index.html o "main.html" basta. Podría generar dos: un "index.html" y un main.html. El primero con el import de alpine embebido y el otro sin  él.
- Core js de la demo del generador: No me gusta como se construye el viewModel, actualmente llamo a los bindings cada vez que se hace un run. Me gustaría una forma más eficiente de hacer esto, tal vez:

<div x-data="makeViewModel()" x-init="bind">

func makeViewModel(): ViewModel {
	const iterator = new Observable(Iterator())
	const coordinator = new Coordinator(iterator)
	return {
		...appState,
		coordinator: coordinator,
		bind: {
			iterator.observeStatusChange = (s) => this.status = s
			... bindings ...
		},
		run: {
			this.isRunnig = true
			await this.coordinator.run()
		}
	}

UI de la demo: No me gustan los controles nativos (selector de "show state" y picker de "provider"), integrarlos mejor en el layout.

Tal vez estaría bine usar "SurrealCSS" para scopear los css de la demo en lugar de que floten en una etiquta style.

Idem para los subcomponentes: ej, activity indicator tiene sus styles flotando.

Añadir licencia, por cierto de ese activity indicator (buscar autor en github)!

Mover layout primitives a un scope común de hugo?, tipo: "hasComponents: true" import?

Añadir al artículo:
". En la práctica, la viabilidad depende de la calidad del modelo de IA y de la complejidad del problema y la calidad de las pruebas unitarias"

Describir que en un principio use un contexto de 10, pero que 2 es suficiente (el ultimo feedback)
